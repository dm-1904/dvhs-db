// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agent {
  id                      String   @id @default(cuid())
  firstName               String @map("First Name")
  lastName                String @map("Last Name")
  email                   String  @unique @map("Email Address")
  phone                   String @map("Phone Number")
  address                 String? @map("Address")
  city                    String? @map("City")
  state                   String? @map("State")
  zip                     String? @map("Zip Code")

  agentType              String? @map("Agent Type")
  agentStatus            String? @map("Agent Status")
  agentLicense           String? @map("Agent License")
  agentLicenseExpiration DateTime? @map("Agent License Expiration")

  pipelineStage           String? @map("Pipeline Stage")
  notes                   String? @map("Notes")

  leads                   Lead[] @relation("AgentLeads")
  partners                Partner[] @relation("AgentPartners")

  @@map("Agent")
}
model Partner {
  id                      String   @id @default(cuid())
  firstName               String @map("First Name")
  lastName                String @map("Last Name")
  email                   String  @unique @map("Email Address")
  phone                   String @map("Phone Number")
  address                 String? @map("Address")
  city                    String? @map("City")
  state                   String? @map("State")
  zip                     String? @map("Zip Code")

  partnerType             String? @map("Partner Type")
  partnerStatus           String? @map("Partner Status")
  partnerLicense          String? @map("Partner License")
  partnerLicenseExpiration DateTime? @map("Partner License Expiration")

  pipelineStage           String? @map("Pipeline Stage")
  notes                   String? @map("Notes")
  leads                   Lead[] @relation("PartnerLeads")
  agents                  Agent[] @relation("AgentPartners")

  @@map("Partner")
}

model Lead {
  agent                   Agent? @relation("AgentLeads", fields: [agentAssigned], references: [id])
  partner                 Partner? @relation("PartnerLeads", fields: [partnerAssigned], references: [id])
  id                      String   @id @default(cuid())
  firstName               String @map("First Name")
  lastName                String @map("Last Name")
  email                   String  @unique @map("Email Address")
  status                  String?  @map("Status")
  labels                  String? @map("Labels")
  qualityScore            Int? @map("Quality Score")
  phone                   String @map("Phone Number")
  address                 String? @map("Address")
  city                    String? @map("City")
  state                   String? @map("State")
  zip                     String? @map("Zip Code")

  agentAssigned           String? @map("Agent Assigned")
  partnerAssigned         String? @map("Partner Assigned")
  registered              DateTime? @map("Registered")
  source                  String? @map("Source")
  lastLogin               DateTime? @map("Last Login")
  loginCount              Int? @map("Login Count")
  lastTouchType           String? @map("Last Touch Type")
  lastTouchDate           DateTime? @map("Last Touch Date")
  lastTouchNotes          String? @map("Last Touch Notes")

  averagePrice            Int? @map("Average Price")
  medianPrice             Int? @map("Median Price")
  favoriteCity            String? @map("Favorite City")
  timeframe               String? @map("Timeframe")

  propertyInquiries       Int? @map("Property Inquiries")
  favoriteProperties      Int? @map("Favorite Properties")
  propertyViews           Int? @map("Property Views")
  propertyFavorites       Int? @map("Property Favorites")
  savedSearches           Int? @map("Saved Searches")

  preQualifiedForMortgage Boolean? @map("Pre-Qualified for Mortgage")
  houseToSell             Boolean? @map("House to Sell")
  firstTimeBuyer          Boolean? @map("First Time Buyer")

  ip                      String? @map("IP")
  buyerSeller             String? @map("Buyer/Seller")

  optedInEmail            Boolean? @map("Opted In Email")
  optedInText             Boolean? @map("Opted In Text")

  pipelineStage           String? @map("Pipeline Stage")
  notes                   String? @map("Notes")
  notes2                  String? @map("Notes 2")

  @@map("Lead")
}
